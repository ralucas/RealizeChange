// Generated by CoffeeScript 1.6.3
(function() {
  var FacebookStrategy, GoogleStrategy, TwitterStrategy, api, app, config, ensureAuthenticated, express, http, mongoose, passport, path, routes, user;

  express = require('express');

  routes = require('./routes');

  api = require('./routes/api');

  http = require('http');

  path = require('path');

  app = express();

  global.app = app;

  mongoose = require('mongoose');

  user = require('./Models/User');

  passport = require('passport');

  FacebookStrategy = require('passport-facebook').Strategy;

  TwitterStrategy = require('passport-twitter').Strategy;

  GoogleStrategy = require('passport-google').Strategy;

  mongoose.connect(process.env.MONGOHQ_URL || config.mongoUrl);

  passport.serializeUser(function(user, done) {
    return done(null, user.id);
  });

  passport.deserializeUser(function(id, done) {
    return user.findOne({
      _id: id
    }, function(err, user) {
      return done(err, user);
    });
  });

  app.set('port', process.env.PORT || 1337);

  app.set('views', __dirname + './../views');

  app.set('view engine', 'jade');

  app.use(express.favicon());

  app.use(express.logger('dev'));

  app.use(express.cookieParser());

  app.use(express.bodyParser());

  app.use(express.session({
    secret: 'c00kies-@nd-cr3@M'
  }));

  app.use(passport.initialize());

  app.use(passport.session());

  app.use(express.methodOverride());

  app.use(app.router);

  app.use(express["static"](__dirname + './../public'));

  if ('development' === app.get('env')) {
    app.use(express.errorHandler());
  }

  config = require('./config.js');

  app.locals.config = config;

  app.locals.links = require('./navigation');

  ensureAuthenticated = function(req, res, next) {
    if (req.isAuthenticated()) {
      return next();
    }
    return res.redirect('/error');
  };

  app.get('/', routes.index);

  app.get('/error', function(req, res) {
    return res.send(401, '{err: you got an error. bud. buddy.}');
  });

  http.createServer(app).listen(app.get('port'), function() {
    return console.log('\nRealize Change is up and listening on port ' + app.get('port'));
  });

}).call(this);
